@{
    Layout = "_Layout";
}

@*@section Sidebar {
	<div class="sidebar-root">
		@await Html.PartialAsync("Api/Sidebar/_" + Document.GetString(CodeAnalysisKeys.Kind))
	</div>
}

@section Breadcrumbs {
	@{
		List<IDocument> containingTypes = new List<IDocument>();
		IDocument containingType = Document.GetDocument(CodeAnalysisKeys.ContainingType);
		while (containingType != null)
		{
			containingTypes.Add(containingType);
			containingType = containingType.GetDocument(CodeAnalysisKeys.ContainingType);
		}
		containingTypes.Reverse();
		foreach (IDocument reverseContainingType in containingTypes)
		{
			<span>@Context.GetTypeLink(reverseContainingType).</span>
		}
	}
}*@

@{
	// Use the ViewData to track headings since it's too late to figure them out from HTML by the time we're rendering
	// (anchor, title)
	var headings = new List<(string Id, string Name)>();
	ViewData[Keys.Headings] = headings;
}

<section class="prose dark:prose-invert max-w-full">
	@{
		var parentDocument = Document.GetDocument(CodeAnalysisKeys.ContainingType) ?? Document.GetDocument(CodeAnalysisKeys.ContainingNamespace);
		if (parentDocument != null && parentDocument.GetString(Keys.Title) != "global")
		{
			@Context.GetTypeLink(parentDocument);
		}
	}
	<h1 class="mt-1 mb-2">@Html.Raw(Context.GetFormattedHtmlName(ApiDocsHelper.GetDisplayName(Document)))</h1>
	@{
		var apiKind = Document.GetString(CodeAnalysisKeys.Kind);
		if (apiKind != "Namespace")
		{
			var packageName = ApiDocsHelper.GetPackageName(Document);
			<span class="text-sm opacity-80">in <a rel="noopener" href="https://www.nuget.org/packages/@packageName">@packageName</a></span>
		}
	}

	<div class="grid grid-cols-aside">
		<div>
			@await Html.PartialAsync("Api/Kind/_" + Document.GetString(CodeAnalysisKeys.Kind))
		</div>
		@if (headings.Count > 0)
		{
			<aside>
				<div class="p-8">
					<span>On this page</span>
					<ul class="list-none p-0 m-0">	
					@foreach (var heading in headings)
					{
						<li class="p-0"><a href="#@heading.Id">@heading.Name</a></li>
					}
					</ul>
				</div>
			</aside>
		}
	</div>
</section>

@{ IgnoreBody(); }